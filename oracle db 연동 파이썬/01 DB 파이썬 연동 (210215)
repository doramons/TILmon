# 파이썬과 db연동하기

- client program : 고객이 요청하는 명령을 입력받고 db 서버에 요청하여 결과를 처리해줌 
 ex ) python, java, sql developer 등
- db 서버 : db 에서 고객의 요청을 처리하여 결과값을 줌
  ex) oracle, mysql,mssql 등
  
  dbms 마다 각각 라이브러리가 있음 -> but 사용법은 동일함 (통일시킴)
  
  python 패키지에 oracle, mssql, mysql 등이 따로 안깔려 있어서 따로 패키지 설치해야함
  

    
  
  1. 1st party library - 파이썬 개발환경에 내장되어있는 라이브러리(기본 라이브러리)
  2. 2nd party lib - 우리가 직접 만든 라이브러리
  3. 3rd party lib - 외부에서 만들어진 라이브러리
    - 중앙 저장소는 3rd party 라이브러리들을 모아놓은 서버들이다 (앱스토어와 비슷 한 개념)
    - 중앙저장소에서 다운로드 받아 설치 가능(pip)
    - pypi(누구나 올릴수 있음) , conda repository(conda 자체에서 걸러서 받음) 등의 툴을 이용해서 설치
    
    #PyPi (python package Index)
     - 파이썬 서드파티 패키지들의 저장소
    
      * 검색창에 설치할 패키지 검색
      * 밑에 설치 명령어를 복사하여 설치
    
      ** 주요 명령어
      pip install 패키지명
      
      
      
    # conda package repository(아나콘다 설치시에만 사용 가능)
    
      - 아나콘다에서 관리하는 패키지 저장소
      
   
   ## 패키지 설치방법
   ** anaconda prompt 실행 or cmd 에서 activate 명령어 'pip install cx-Oracle' or 'conda install cx-Oracle' 입력
      ** pip list 입력하면 설치된 패키지 리스트 보임
      
      
   오라클 클라이언트 설치
   https://www.oracle.com/kr/database/technologies/instant-client/winx64-64-downloads.html
   
   -기존 실습시에는 노트북에 db서버(oracle.xe)와 db클라이언트(sql developer) 모두 다운 받았기 때문에 굳이 db클라이언트를 다운받지 않아도 실행되었음
   but 보통은 클라이언트 프로그램과 db서버를 다른 pc로 실행하기 때문에 클라이언트 프로그램 사용시 oracle client를 다운 받아야함
   
  
  # cx_Oracle 모듈
- 파이썬에서 오라클 DBMS와 연동는 다양한 함수를 제공하는 모듈
- Python DB API 2.0 표준을 따른다. 


 ** 코딩 절차
  1. cx_Oracle 모듈 import
  2. cx_Oracle 모듈의 connect() 함수를 이용해 디비 연결( sql oracle에서 접속하는 것과 같음)
  3. Connection 객체의 cursor() 메소드를 이용해 Cursor 객체 조회
    - Cursor객체: sql문을 전송하고 select결과 조회 기능
  4. Cursor 의 execute() 메소드를 이용해 SQL문을 전송
  5. SELECT 의 경우 결과 조회
    - 조회 결과를 한 행씩 반환 받아 사용
    - 조회 결과를 한 번에 반환 받아 사용
    
  6. INSERT/DELETE/UPDATE의 경우 SQL문 실행 후 Connection의 commit() 메소드를 이용해 Transaction 처리
    - commit을 해야 최종적으로 db에 저장이 됨
    
  7. Cursor, Connection 연결 닫기
  
  
  
 ### DB 연결
- connect() 함수를 이용하며 연결 후 Connection 객체를 받는다.
- 연결시 필요한 값
    - **host** (IP주소 - 이를 구분하기 위해 도메인을 사용하기도 함, 해당 컴퓨터를 찾음)
        - localhost(=127.0.0.1)의 경우 내 컴퓨터가 클라이언트인 동시에 서버일 때
    - **port번호** 
        - 0~65535의 숫자로 이루어짐
        - 어떤 서비스를 제공할 지에 대한 식별
        - 웹서버(80), db서버(1521) 등을 구분하기 위한 번호
    
         ex) 203.161.5.7 : 80 (port번호)
                (IP주소) (구분자)
    - **SID(DB이름)**
        (oracle에서는 sid라고 하고 다른 프로그램은 db이름이라고 함)
        - 여러가지 DB를 동시에 관리 할때 구분을 위해
    - **user name** (사용자 계정)
    - **password**
      
